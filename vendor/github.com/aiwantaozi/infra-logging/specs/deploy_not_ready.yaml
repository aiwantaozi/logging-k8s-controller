#  kind: Pod
# apiVersion: v1
# metadata:
#   name: fluentd-pod
# spec:
#   volumes:
#   - name: fluentd-volume
#     secret:
#       secretName: fluentd
#   containers:
#   - name: fluentd-container
#     image: nginx
#     volumeMounts:
#     - name: fluentd-volume
#       readOnly: true
#       mountPath: "/etc/secret-volume"
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: fluentd
#   namespace: cattle-system
#   labels:
#     k8s-app: fluentd
#     kubernetes.io/cluster-service: "true"
#     addonmanager.kubernetes.io/mode: Reconcile
# ---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: fluentd
#   labels:
#     k8s-app: fluentd
#     kubernetes.io/cluster-service: "true"
#     addonmanager.kubernetes.io/mode: Reconcile
# rules:
# - apiGroups:
#   - ""
#   resources:
#   - "services"
#   - "namespaces"
#   - "endpoints"
#   verbs:
#   - "get"
#   - "watch"
#   - "list"
#   - "update"
#   - "create"
#   - "patch"
#   - "delete"
# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   namespace: kube-system
#   name: elasticsearch-logging
#   labels:
#     k8s-app: elasticsearch-logging
#     kubernetes.io/cluster-service: "true"
#     addonmanager.kubernetes.io/mode: Reconcile
# subjects:
# - kind: ServiceAccount
#   name: elasticsearch-logging
#   namespace: kube-system
#   apiGroup: ""
# roleRef:
#   kind: ClusterRole
#   name: elasti# csearch-logging
#  apiGroup: ""
# 
# ---
# 
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: rancher# 
#  namespace: cattle-system
# 
# ---
# 
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: rancher
#   namespace: cattle-system
# subjects:
# - kind: ServiceAccount
#   name: rancher
#   namespace: cattle-system
# roleRef:
#   kind: ClusterRole
#   name: cluster-admin
#  apiGroup: rbac.authorization.k8s.io 

---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  name: fluentd-es-v2.0.1
  namespace: cattle-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  template:
    metadata:
      labels:
        kubernetes.io/cluster-service: "true"
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: fluentd-es
      containers:
      - name: fluentd-es
        image: gcr.io/google-containers/fluentd-elasticsearch:v2.0.1
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        volumeMounts:
        - name: var-log-containers
          mountPath: /var/log/containers
          readOnly: true
        - name: var-log-pod
          mountPath: /var/log/pods
          readOnly: true
        - name: var-lib-docker-containers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-volume
          readOnly: true
          mountPath: /etc/fluentd-volume
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-lib-docker-containers
        hostPath:
          path: /var/lib/docker/containers
      - name: var-log-pod
        hostPath:
          path: /var/log/pods
      - name: var-log-containers
        hostPath:
          path: /var/log/containers
      - name: fluentd-volume
        secret:
          secretName: fluentd       